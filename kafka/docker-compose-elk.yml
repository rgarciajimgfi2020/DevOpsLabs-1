version: "3"

services:
  ##################################################################################
  # ZOOKEEPER - KAKFA CONTROL                                                      #
  ##################################################################################
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - /tmp/zookeeper/data:/data
      - /tmp/zookeeper/datalog:/datalog
  ##################################################################################
  # KAFKA MAIN BROKER PROCESSOR                                                    #
  ##################################################################################
  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /tmp/kafka/data:/var/lib/kafka/data
      - ./tests:/usr/bin/tests
    depends_on:
      - zookeeper  
  
  ##################################################################################
  # ELASTICSEARCH NODE                                                             #
  ##################################################################################
  elasticsearch:
    image: elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200" # to be used by direct http connections
      - "9300:9300" # to be used by application client connections
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    
  ##################################################################################
  # LOGSTASH NODE                                                                  #
  ##################################################################################
  logstash:
    image: logstash:7.10.1
    container_name: logstash
    depends_on:
      - elasticsearch
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./logstash/conf:/usr/share/logstash/pipeline
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
  
  ##################################################################################
  # KIBANA NODE TO VISUALIZE DATA                                                  #
  ##################################################################################
  kibana:
    image: kibana:7.8.0
    container_name: kib
    ports:
      - "5601:5601"
  
  ##################################################################################
  # FILEBEAT NODE                                                                  #
  ##################################################################################
  #filebeat:
  #  image: elastic/filebeat:7.10.2
  #  container_name: filebeat
  #  volumes:
  #    - ./filebeat/logs:/usr/share/filebeat/logs
  #    - ./filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
  #  command: ["--strict.perms=false"]
  #  stdin_open: true # docker run -i
  #  tty: true        # docker run -t   
  #  logging:
  #    driver: "json-file"
  #    options:
  #      max-size: "10m"
  #      max-file: "50"
        
  ##################################################################################
  # METRICBEAT NODE                                                                  #
  ##################################################################################
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.11.1
    container_name: metricbeat
    hostname: metricbeat
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    volumes:
      -./metricbeat/conf/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./metricbeat/data/:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOST="elasticsearch:9200"
      - KIBANA_HOST="kib:5601"
    stdin_open: true # docker run -i
    tty: true        # docker run -t   
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
        
##################################################################################
# NETWORKS                                                                       #
##################################################################################
# Default network will be started
